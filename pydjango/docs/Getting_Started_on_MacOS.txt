This is a new implementation of the Grand Comics Database in Python
using the Django framework.

For basic information, see the README file in the project's root directory.
This file explains the specifics of setting up a development environment
on MacOS X (10.4 or 10.5, at least in theory).

To run:

0.  You'll need Python.  This code was developed with Python 2.4 in order
to be compatible with the last version of MySQLdb (1.2.1) that was pre-compiled
for MacOS.  Current versions of MySQLdb do not compile on all versions
of MacOS.  More details on this later.


1.  Install Django 1.0 (http://www.djangoproject.com).


2.  Install MySQL (version 5.0.45 has been used with this code).  Load a
data dump of the GCD database into MySQL (ask the tech list for help
if you don't already know how to get such a dump).  The most recent dump
as of this writing is missing the Indexer and/or IndexCredit tables.  Send
email to GCD-Tech and someone can get you the missing data (with passwords
removed).


3.  Install the MySQLdb Python module from
http://sourceforge.net/projects/mysql-python

You may need to downgrade to Python 2.4 and use
a slightly older version of MySQLdb due to bug 1768305 (in the SourceForge
bug-tracking system), which applies to Python 2.5 despite saying 2.4 in the
title.  Yes, that's confusing.  There's also bug 1821021 about MacOS 10.4
compilation.  There is a page that maintains pre-compiled
Python packages for MacOS that has one for Python 2.4 but not 2.5:
http://pythonmac.org/packages/py24-fat/index.html
This is what I used, and I recommend it- the last release of MySQLdb was
more than a year ago (Feb 2007) so I'm not holding my breath wating for
the compile problems to be fixed.

If you're feeling brave, this page on installing Django:
http://tinyurl.com/2sq4x7
(which is on a Ruby site for some reason) has instructions on how to
get MySQLdb compiling for Python 2.5.


4.  Put the src/ directory of this project on your Python path.


5.  Open up src/gcd/settings.py and change database settings as needed.
By default, we assume that the database is called gcd_dev and it can
be accessed by a user called gcd_dev with no passwords.  If you set
your database up differently, look for settings that start with
DATABASE and change them appropriately.


6.  From the src/gcd/ directory, run

python manage.py runserver

and then take a look at http://127.0.0.1:8000/gcd/

If you don't get any page at all, check www.djangoproject.com if it
looks like Django isn't configured correctly, or
http://maelstrom.walton.uark.edu/bugzilla/ and/or handrews@users.sourceforge.net
if it appears to be a code problem.


7.  When you start making changes, go to the wiki on maelstrom for instructions
on how to get code reviewed before checkin.  Submissions that do not first
go through code review will be reverted.


